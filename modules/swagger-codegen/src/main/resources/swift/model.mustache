{{#models}}{{#model}}//
// {{classname}}.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

public final class {{classname}}: ParameterEncodable, Decodable {
{{#vars}}
{{#isEnum}}
  public enum {{datatypeWithEnum}}: String { {{#allowableValues}}{{#values}}
    case {{enum}} = "{{raw}}"{{/values}}{{/allowableValues}}
  }
{{/isEnum}}
{{/vars}}
{{#vars}}
{{#isEnum}}
  {{#description}}/** {{description}} */
  {{/description}}public var {{name}}: {{{datatypeWithEnum}}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}
{{/isEnum}}
{{^isEnum}}
  {{#description}}/** {{description}} */
  {{/description}}public var {{name}}: {{{datatype}}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}
{{/isEnum}}
{{/vars}}

{{^unwrapRequired}}
  public init() {}
{{/unwrapRequired}}
{{#unwrapRequired}}
  public init({{#allVars}}{{^-first}}, {{/-first}}{{name}}: {{#isEnum}}{{datatypeWithEnum}}{{/isEnum}}{{^isEnum}}{{datatype}}{{/isEnum}}{{^required}}?=nil{{/required}}{{/allVars}}) {
    {{#allVars}}
    self.{{name}} = {{name}}
    {{/allVars}}
  }
{{/unwrapRequired}}

  public func parameters() -> Parameters {

    var parameters = Parameters()

{{#allVars}}    parameters.encodeParameter(key: "{{name}}", value:{{name}}{{#isEnum}}{{^required}}?{{/required}}.rawValue{{/isEnum}}{{#isListContainer}}{{^required}}?{{/required}}.map { Parameters.encode($0) }{{/isListContainer}})
{{/allVars}}

    return parameters
  }

  // Decodable
  public typealias Source = [String: Any]

  public static func decode(source: Source) throws -> {{classname}} {

    return {{classname}}({{#allVars}}
      {{name}}:{{#isContainer}}({{/isContainer}}try{{^required}}?{{/required}} source.decode("{{name}}"){{#isContainer}} as DecodableArray<{{containerSubType}}>){{^required}}?{{/required}}.items{{/isContainer}}{{#hasMore}},{{/hasMore}}{{/allVars}}
    )
  }

}{{/model}}
{{/models}}
