{{#models}}{{#model}}//
// {{classname}}.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

public final class {{classname}}: Encodable, Decodable {
{{#vars}}
{{#isEnum}}
  {{#description}}/** {{description}} */
  {{/description}}public let {{name}}: {{{datatypeWithEnum}}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}
{{/isEnum}}
{{^isEnum}}
  {{#description}}/** {{description}} */
  {{/description}}public let {{name}}: {{{datatype}}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}
{{/isEnum}}
{{/vars}}

{{^unwrapRequired}}
  public init() {}
{{/unwrapRequired}}
{{#unwrapRequired}}
  public init({{#allVars}}{{^-first}}, {{/-first}}{{name}}: {{#isEnum}}{{datatypeWithEnum}}{{/isEnum}}{{^isEnum}}{{datatype}}{{/isEnum}}{{^required}}?=nil{{/required}}{{/allVars}}) {
    {{#allVars}}
    self.{{name}} = {{name}}
    {{/allVars}}
  }
{{/unwrapRequired}}

  public func encode() -> [String: Any] {

    var encoded = [String: Any]()

{{#allVars}}    encoded.encode(key: "{{name}}", value:{{name}})
{{/allVars}}

    return encoded
  }

  // Decodable
  public static func decode(source: Any) throws -> {{classname}} {
    let source = try convert(source) as [String: Any]
    return {{classname}}({{#allVars}}
      {{name}}:try source.decode("{{name}}"){{#hasMore}},{{/hasMore}}{{/allVars}}
    )
  }

}{{/model}}
{{/models}}
